name: Release

on:
  schedule:
    # schedule for 0242 every sunday
    - cron: '42 2 * * 0'
  push:
    branches:
      - master

jobs:
  deploy:
    name: Build and upload to AWS ECR
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag docker image
        env:
          DOCKER_BUILDKIT: 1
        run: |
          image_tag="$(date +%Y%m%d%H%M%S)-$(echo ${{ github.sha }} | cut -c1-6)"
          echo "IMAGE_TAG=$image_tag" >> $GITHUB_ENV
          docker build -t moarcats:$image_tag .

      - name: Tag for release
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: moarcats
        run: |
          docker tag moarcats:${{ env.IMAGE_TAG }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.IMAGE_TAG }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.IMAGE_TAG }}

      - name: Tag latest docker image if on master
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: moarcats
        run: |
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.IMAGE_TAG }} \
            $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Logout of AWS ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
